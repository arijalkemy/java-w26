@@ -36,38 +36,34 @@
         return new UserWithFollowersCountDto(
                 user.getId(),
                 user.getName(),
-                (int) user.getIdFollowers().stream().count());
+                user.getIdFollowers().size());
     }
 
     @Override
-    public UserFollowDto follow(int userId, int userIdToFollow) {
+    public UserFollowedDto follow(int userId, int userIdToFollow) {
+
         if(userId == userIdToFollow){
             throw new BadRequestException("No te podes seguir a vos mismo maquina");
         }
 
-        Optional<User> userOptional = userRepository.getById(userId);
-        Optional<User> userToFollowOptional = userRepository.getById(userIdToFollow);
-
-        if (userOptional.isEmpty() || userToFollowOptional.isEmpty()) {
-            throw new NotFoundException("No se encontr√≥ uno o ambos usuarios");
-        }
+        User user = getUserById(userId);
+        User userToFollow = getUserById(userIdToFollow);
 
         if(postRepository.findAllByUser(userIdToFollow).isEmpty()){
             throw new BadRequestException("El usuario con el ID: " + userIdToFollow + " no es un vendedor");
         }
 
-        User user = userOptional.get();
-        User userToFollow = userToFollowOptional.get();
-
         if(user.getIdFollows().contains(userIdToFollow)){
             throw new ConflictException("El usuario con id " + userId + " ya sigue al usuario con id " + userIdToFollow);
         }
 
-
         user.getIdFollows().add(userToFollow.getId());
+        userToFollow.getIdFollowers().add(user.getId());
 
         userRepository.save(user);
-        return new UserFollowDto(user.getName(),user.getIdFollows(),userToFollow.getIdFollowers());
+        userRepository.save(userToFollow);
+
+        return transferToUserFollowedDto(user);
     }
 
     private enum NameOrder{
